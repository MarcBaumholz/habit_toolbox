"use client"
import Link from 'next/link'
import { useEffect, useMemo, useState } from 'react'
import { api } from '../api'
import { Button } from '@/components/ui/Button'
import { Card } from '@/components/ui/Card'
import { Dialog } from '@/components/ui/Dialog'

interface GroupRead { id: number; name: string; members: number; owner_id: number; description?: string | null }

export default function GroupsPage() {
  const [myGroups, setMyGroups] = useState<GroupRead[]>([])
  const [subs, setSubs] = useState<GroupRead[]>([])
  const [loading, setLoading] = useState(false)
  const [creating, setCreating] = useState(false)
  const [newName, setNewName] = useState('')
  const [newDesc, setNewDesc] = useState('')

  async function load() {
    setLoading(true)
    try {
      const [mine, me] = await Promise.all([
        api('/groups/me/list'),
        api('/users/me')
      ])
      const myId = me.id
      const owned: GroupRead[] = []
      const subscribed: GroupRead[] = []
      for(const g of mine as GroupRead[]){
        (g.owner_id === myId ? owned : subscribed).push(g)
      }
      setMyGroups(owned)
      setSubs(subscribed)
    } finally {
      setLoading(false)
    }
  }
  useEffect(() => { load() }, [])

  return (
    <div className="space-y-6">
      <div className="flex items-end justify-between">
        <h1 className="text-2xl font-semibold">My Groups</h1>
        <Dialog
          title="Create Group"
          trigger={<Button onClick={() => setCreating(true)}>New Group</Button>}
        >
          <div className="space-y-3">
            <div>
              <label className="block text-sm font-medium">Group Name</label>
              <input
                className="input mt-1"
                placeholder="e.g., Early Risers Club"
                value={newName}
                onChange={(e) => setNewName(e.target.value)}
              />
            </div>
            <div>
              <label className="block text-sm font-medium">Purpose / Description</label>
              <textarea
                className="input mt-1 min-h-24"
                placeholder="What is this group about?"
                value={newDesc}
                onChange={(e) => setNewDesc(e.target.value)}
              />
            </div>
            <div className="text-right">
              <Button onClick={async () => {
                const created = await api('/groups', { method: 'POST', body: JSON.stringify({ name: newName, is_public: true, description: newDesc }) })
                setNewName(''); setNewDesc('')
                await load()
                // Ensure we also join (owner already added server-side), just refresh
              }}>Create</Button>
            </div>
          </div>
        </Dialog>
      </div>

      <Card>
        <div className="flex items-center justify-between mb-3">
          <div className="font-medium">My Groups</div>
        </div>
        {loading && <div className="text-sm text-neutral-500">Loadingâ€¦</div>}
        {!loading && myGroups.length===0 && subs.length===0 && <div className="text-sm text-neutral-500">You haven't joined any groups yet.</div>}
        {!loading && (myGroups.length>0 || subs.length>0) && (
          <div className="grid md:grid-cols-2 gap-3">
            {[...myGroups, ...subs].map(g => (
              <Card key={g.id} className="p-3">
                <div className="flex items-center justify-between">
                  <div>
                    <div className="font-medium">{g.name}</div>
                    <div className="text-sm text-neutral-500">Members: {g.members}</div>
                  </div>
                  <a className="text-sm underline" href={`/groups/${g.id}`}>Open</a>
                </div>
              </Card>
            ))}
          </div>
        )}
      </Card>
    </div>
  )
}
